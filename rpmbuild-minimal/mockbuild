#!/usr/bin/env bash

function _usage {
    echo "USAGE: mockbuild -r mock_target -s source_rpm [-i install_rpm [-i install_rpm ...]] [-d define [-d define ...]] -n" 1>&2
    exit 1
}

no_cleanup_after=0
while getopts r:s:i:d:n opt; do
    case "$opt" in
        r) mock_target=$OPTARG ;;
        s) source_rpm=$OPTARG ;;
        i) install=("${install[@]}" "--install $OPTARG") ;;
        d) define=("${define[@]}" "--define=$OPTARG") ;;
        n) no_cleanup_after=1 ;;
    esac
done

# Validate input
test -z "$mock_target" && _usage
test -z "$source_rpm" && _usage
if ! test -f "$source_rpm"; then
    echo "$source_rpm does not exist" 1>&2
    exit 2
fi

# Get name, version, release from SRPM
pkginfo=( $(rpm -qp --queryformat '%{NAME} %{VERSION} %{RELEASE} %{SOURCERPM}' "$source_rpm" 2>/dev/null) )

if test "${pkginfo[3]}" != "(none)"; then
    echo "$source_rpm is not a valid source RPM"
fi

# Initialize chroot
mock --root="$mock_target" --init

# Install
if test ${#install[@]} -ne 0; then
    mock --root="$mock_target" ${install[@]}
    clean_opts=("--no-clean")
fi

# Apply --no-cleanup-after if necessary
expr "$no_cleanup_after" = 1 >/dev/null && clean_opts=("${clean_opts[@]}" "--no-cleanup-after")

name=${pkginfo[0]}
version="${pkginfo[1]}-${pkginfo[2]}"

# Run mock
mock --root="$mock_target" --resultdir=$HOME/mock/${name}/${version}/"%(target_arch)s"/ "${clean_opts[@]}" "${define[@]}" "$source_rpm"
